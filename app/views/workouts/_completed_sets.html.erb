<%# 
  
  A table of completed sets for a specific workout.
  Pass it a Workout as 'workout' and a user as 'user'

  render "workouts/completed_sets", {workout: aw, user: @user}

%>

<table class="table">
  <tbody>
    <% workout.completed_sets(user).each do |cs| %>
      <tr class="completed_set">
        <td><%= cs.exercise.name %></td>
        <td><%= cs.reps %></td>
        <td><%= cs.complete_time.in_time_zone(user.time_zone).strftime("%l:%M %p %Z") %></td>
        <td><%= link_to "Edit", nil, :onClick => "editCompletedSet(#{cs.id}); return false;" %></td>

        <%# How it works
          - JS onclick calls function in gpucc.js
          - jquery call submits ajax to completed_sets#edit, triggering controller event
          - controller event sees AJAX request, fetches cs and loads to @completedsetform and triggers JS response (generated from erb template, views/completed_sets/edit.js.erb)
          - JS response replaces modal content and toggles modal 

          - submit of modal form triggers completed_sets#update action
          - on successful save, flash success notice and render page again <=== what is the page here, how do I go "back to where I came from" 
          - on unsuccessful save, return to page with modal still enabled         
        %>
      </tr>
    <% end %>
  </tbody>
</table>


<%#- Modal Edit window - populated by AJAX %>
<div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      ...
    </div>
  </div>
</div>