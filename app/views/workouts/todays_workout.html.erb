<% content_for :title, "Today's Workout" %>
<h2>Today's Workout</h2>

<%#

For each workout, show exercises assigned
then show a form for each exercise, which submits a completedset

Unpack the controller package and
	- Create a section for each workout
		- Show the workout_exercises and progress for each
		- Create a user form with pre-wired completed_sets for each workout_exercise 
		- Show the past completed_sets

%>

<% @workout_activities.each do |wa| %>

	<div class="workoutactivity panel panel-default">
		<div class="panel-body">
			<h3><%= wa.workout.end_date ? wa.workout.start_date.strftime("%A, %B %e, %Y") + " to " + wa.workout.end_date.strftime("%A, %B %e, %Y") : wa.workout.start_date.strftime("%A, %B %e, %Y") %></h3>

			
			<%#----- Assignment Section --------%>	

			<table class="table table-condensed">
				<!--thead>
					<tr>
						<th>Exercise</th>
						<th>Goal</th>
						<th>Count</th>
						<th>Progress</th>
					</tr>
				</thead -->
				<tbody>
				<% wa.workout_exercises.each do |we| %>

					<%# Calculate Percent Complete (have to force floating point) %>
					<% reps_done = wa.count_reps(we.exercise) %>
					<% reps_goal = we.goal %>
					<% pct_complete = ((reps_done.to_f/reps_goal) * 100).to_i %>
					<% progress_status = pct_complete >= 100 ? "progress-bar progress-bar-success" : "progress-bar" %>
					<%# Should probably turn all this into an ExerciseHelper to start to include things like time remaining for progress bar color %>

					<tr>
						<td><%= we.exercise.name %></td>
						<td><%= reps_done %> <b>/</b> <%= reps_goal %></td>
						<td width="40%">
							<div class="progress">
								<%= content_tag :div, {class: "#{progress_status}", role: "progressbar",  aria: {valuenow: "#{pct_complete}", valuemin: "0", valuemax: "100"}, style: "width: #{pct_complete}%;"} do %>
									<span class="bar"><%= pct_complete %>%</span>
								<% end %>
							</div>
						</td>
					</tr>

				<% end %>
				</tbody>
			</table>



			<%#----- Input Section --------%>
			<%# http://stackoverflow.com/questions/972857/multiple-objects-in-a-rails-form %>
			<%= form_tag completed_sets_path, :class => 'form-horizontal', :role => 'form' do %>
				<% wa.new_sets.each_with_index do |completed_set,i| %>
					<%= fields_for "completed_sets[#{i}]", completed_set do |ns| %>
						<div>
						  <%= ns.hidden_field :exercise_id %>			  
						  <%= ns.hidden_field :workout_id %>			  
						</div>
						<div class="row">
						  <div class="col-xs-4 "><%= ns.label :reps, ns.object.exercise.name, {:class => 'control-label pull-right'} %></div>
						  <div class="col-xs-8"><%= ns.text_field :reps, {:class => "form-control", :style => "width:60px", :maxlength => "4"} %></div>  
						</div>	
					<% end %>
				<% end %>

				<div class="form-group">
					<%= submit_tag "Record Set", {:class => "btn btn-primary btn-block"} %>
				</div>

			<% end %>
			<%#----- Previous Sets Section --------%>

			<h4>Previous Sets</h4>
			<table class="table">
				<% wa.completed_sets.each do |cs| %>
					<tr class="completed_set">
						<td><%= cs.exercise.name %></td>
						<td><%= cs.reps %></td>
						<td><%= cs.complete_time.in_time_zone(current_user.time_zone).strftime("%l:%M %p %Z") %></td>
						<td><%= link_to "Edit", nil, :onClick => "editCompletedSet(#{cs.id}); return false;" %></td>

						<%# How it works
							- JS onclick calls function in gpucc.js
							- jquery call submits ajax to completed_sets#edit, triggering controller event
							- controller event sees AJAX request, fetches cs and loads to @completedsetform and triggers JS response (generated from erb template)
							- JS response replaces modal content and toggles modal 

							- submit of modal form triggers completed_sets#update action
							- on successful save, flash success notice and render page again <=== what is the page here, how do I go "back to where I came from" 
							- on unsuccessful save, return to page with modal still enabled					
						%>
					</tr>
				<% end %>
			</table>
		</div>
	</div>				
<% end %>



<%#- Modal Edit window - populated by AJAX %>
<div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
  <div class="modal-dialog">
  	<div class="modal-content">
  		...
  	</div>
  </div>
</div>
